@import "../variables/screen";

// Framework grid generation

//@mixin make-grid-columns($i: 1, $list: ".col-xs-#{$i}, .col-sm-#{$i}, .col-md-#{$i}, .col-lg-#{$i}") {
//  @for $i from 1 + 1 through $grid-columns {
//    $list: "#{$list}, .col-xs-#{$i}, .col-sm-#{$i}, .col-md-#{$i}, .col-lg-#{$i}";
//  }
//  #{$list} {
//    position: relative;
//    min-height: 1px;
//    padding-left: $grid-gutter-width / 2;
//    padding-right: $grid-gutter-width / 2;
//  }
//}

@mixin make-grid-columns($i: 1, $list: ".col-xs-#{$i}, .col-md-#{$i}") {
  @for $i from 1 + 1 through $grid-columns {
    $list: "#{$list}, .col-xs-#{$i}, .col-md-#{$i}";
  }
  #{$list} {
    position: relative;
    min-height: 1px;
    padding-left: $grid-gutter-width / 2;
    padding-right: $grid-gutter-width / 2;
  }
}

@mixin float-grid-columns($class, $i: 1, $list: ".col-#{$class}-#{$i}") {
  @for $i from 1 + 1 through $grid-columns {
    $list: "#{$list}, .col-#{$class}-#{$i}";
  }
  #{$list} {
    float: left;
  }
}

@mixin calc-grid-column($index, $class, $type) {
  @if $type == width and $index > 0 {
    .col-#{$class}-#{$index} {
      width: percentage($index / $grid-columns);
    }
  }
  //@if $type == push and $index > 0 {
  //  .col-#{$class}-push-#{$index} {
  //    left: percentage($index / $grid-columns);
  //  }
  //}
  //@if $type == push and $index == 0 {
  //  .col-#{$class}-push-0 {
  //    left: auto;
  //  }
  //}
  //@if $type == pull and $index > 0 {
  //  .col-#{$class}-pull-#{$index} {
  //    right: percentage($index / $grid-columns);
  //  }
  //}
  //@if $type == pull and $index == 0 {
  //  .col-#{$class}-pull-0 {
  //    right: auto;
  //  }
  //}
  @if $type == offset {
    .col-#{$class}-offset-#{$index} {
      margin-left: percentage($index / $grid-columns);
    }
  }
}

@mixin loop-grid-columns($columns, $class, $type) {
  @for $i from 0 through $columns {
    @include calc-grid-column($i, $class, $type);
  }
}

@mixin make-grid($class) {
  @include float-grid-columns($class);
  @include loop-grid-columns($grid-columns, $class, width);
  //@include loop-grid-columns($grid-columns, $class, pull);
  //@include loop-grid-columns($grid-columns, $class, push);
  @include loop-grid-columns($grid-columns, $class, offset);
}

//@mixin container-fixed($gutter: $grid-gutter-width) {
//  margin-right: auto;
//  margin-left: auto;
//  padding-left: $gutter / 2;
//  padding-right: $gutter / 2;
//  @include clearfix;
//}

//@mixin make-row($gutter: $grid-gutter-width) {
//  margin-left: $gutter / -2;
//  margin-right: $gutter / -2;
//  @include clearfix;
//}

//
// Grid system
// --------------------------------------------------

//.gs-fixed {
//  margin: 0 auto;
//  @include container-fixed;
//  width: 100%;
//  @media (min-width: $screen-sm) {
//    width: 100%;
//  }
//  @media (min-width: $screen-md) {
//    width: $screen-md;
//  }
//  @media (min-width: $screen-lg) {
//    width: $screen-lg;
//  }
//}

//.gs {
//  @include container-fixed;
//}

//.row {
//  @include make-row;
//}

@include make-grid-columns;

@include make-grid(xs);

//@media (min-width: $screen-sm-min) {
//  @include make-grid(sm);
//}

@media (min-width: $screen-md-min) {
  @include make-grid(md);
}

//@media (min-width: $screen-lg-min) {
//  @include make-grid(lg);
//}

.full-width {
  width: 100%;
}
.full-height {
  height: 100%;
}
